# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Run unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
          image: postgres:13
          # Provide the password for postgres
          env:
            POSTGRES_USER: root
            POSTGRES_DB: simplesedge
            POSTGRES_PASSWORD: secret
          ports:
            - 5432:5432
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Add golang-migrate
      # download the migrate binary and move to the /bin folder.
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin/
        which migrate

    - name: Run migrations
      run: make migrate-up

    - name: Test
      # running test will take care of building.
      run: make test
